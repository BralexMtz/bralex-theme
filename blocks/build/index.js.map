{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./src/index.js","webpack:///external [\"wp\",\"blockEditor\"]","webpack:///external [\"wp\",\"blocks\"]","webpack:///external [\"wp\",\"components\"]","webpack:///external [\"wp\",\"element\"]","webpack:///external [\"wp\",\"serverSideRender\"]"],"names":["registerBlockType","title","description","icon","category","attributes","content","type","default","mediaURL","mediaAlt","edit","props","setAttributes","className","isSelected","handlerOnChangeInput","newContent","handlerOnSelectMediaUpload","image","sizes","full","url","alt","open","save"],"mappings":"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","file":"index.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = \"./src/index.js\");\n","import { registerBlockType } from '@wordpress/blocks';\nimport { TextControl,PanelBody, PanelRow, Button  } from '@wordpress/components';\nimport { InspectorControls, MediaUpload } from '@wordpress/block-editor'; // Esta librería está disponible desde que instalamos el paquete \"wordpress/scripts desde NPM\nimport ServerSideRender from '@wordpress/server-side-render'; \n\n\n\nregisterBlockType(\n  'pg/basic',\n  {\n    title: \"Basic Block\",\n    description: \"Este es nuestro primer bloque\",\n    icon: \"smiley\",\n    category: \"layout\",\n    attributes: {\n      content: {\n        type: \"string\",\n        default: \"Hello World\"\n      },\n      mediaURL:{\n        type: \"string\"\n\n      },\n      mediaAlt:{\n        type: \"string\"\n      }\n\n    },\n    edit: (props)=> {\n      const { attributes: {content}, setAttributes, className, isSelected} = props;\n      const handlerOnChangeInput = (newContent) => {\n        // el valor del input reflejado\n        setAttributes({content:newContent})\n        \n      }\n      const handlerOnSelectMediaUpload = (image) =>{\n        setAttributes({\n          mediaURL: image.sizes.full.url,// El objeto image cuenta con todas las propiedades de los archivos de la Media Library de WordPress, entre ellas los diferentes tamaños\n          mediaAlt: image.alt // También cuenta con el Texto Alternativo definido en la Media Library para cada archivo\n        })\n      }\n      \n      // componente fragment <> </>\n      return <>  \n              <InspectorControls>\n                  <PanelBody // Primer panel en la sidebar\n                      title=\"Modificar texto del Bloque Básico\"\n                      initialOpen={ true }\n                  >\n                      <PanelRow>\n                          <TextControl\n                              label=\"Titulo del bloque\" // Indicaciones del campo\n                              value={ content } // Asignación del atributo correspondiente\n                              onChange={ handlerOnChangeInput } // Asignación de función para gestionar el evento OnChange\n                          />\n                      </PanelRow>\n                  </PanelBody>\n                  <PanelBody\n                    title=\"Selecciona una imagen\"\n                    initialOpen={ true }\n                  >\n                    <PanelRow>\n                        <MediaUpload \n                            onSelect={ handlerOnSelectMediaUpload } // Asignación de función para gestionar el evento OnSelect\n                            type=\"image\" // Limita los tipos de archivos que se pueden seleccionar\n                            // Se envía el evento open y el renderizado del elemento que desencadenará la apertura de la librería, en este caso un botón\n                            render={ ({open}) => {\n                                //Agregamos las clases de los botones de WordPress habituales para que mantenga el estilo dentro del editor\n                                return <Button className=\"components-icon-button image-block-btn is-button is-default is-large\" onClick={open}>Elegir una imagen</Button>;\n                            }}\n                        />\n                    </PanelRow>\n                </PanelBody>\n              </InspectorControls>\n              <ServerSideRender // Renderizado de bloque dinámico\n                  block=\"pg/basic\" // Nombre del bloque\n                  attributes={ props.attributes } // Se envían todos los atributos\n              />\n          </>\n \n    },\n    save: ()=>  null // para buscar una función de renderizado en php\n  }\n)","(function() { module.exports = window[\"wp\"][\"blockEditor\"]; }());","(function() { module.exports = window[\"wp\"][\"blocks\"]; }());","(function() { module.exports = window[\"wp\"][\"components\"]; }());","(function() { module.exports = window[\"wp\"][\"element\"]; }());","(function() { module.exports = window[\"wp\"][\"serverSideRender\"]; }());"],"sourceRoot":""}